//
//  MOMessaging.h
//  MOMessaging
//
//  Created by Chengappa C D on 30/10/19.
//  Copyright Â© 2019 MoEngage. All rights reserved.
//

#import <Foundation/Foundation.h>

//! Project version number for MOMessaging.
FOUNDATION_EXPORT double MOMessagingVersionNumber;

//! Project version string for MOMessaging.
FOUNDATION_EXPORT const unsigned char MOMessagingVersionString[];

#if __has_include(<UserNotifications/UserNotifications.h>)
    #import <UserNotifications/UserNotifications.h>
#endif

#import <MOMessaging/MOInbox.h>
#import <MOMessaging/MOInboxModel.h>
#import <MOMessaging/MOInboxExposedConstants.h>
#import <MOMessaging/MOInboxTableViewCell.h>
#import <MOMessaging/MOInboxViewController.h>

#import <MOMessaging/MONotificationCategory.h>


NS_ASSUME_NONNULL_BEGIN
@interface MOMessaging : NSObject
/**
 Set this property to YES if you don't wish to use the Inbox/Notification center feature
 */
@property(nonatomic, assign) BOOL      disableInbox;

/**
 Set the property to YES if you don't want MoEngage to reset bagde no. on app open
 */
@property(nonatomic, assign) BOOL      disableBadgeReset;

/// Method to get the singleton instance 
+(instancetype _Nonnull )sharedInstance;

/// Making the init method private as this Class has Singleton implementation
-(instancetype _Nonnull)init NS_UNAVAILABLE;

/// Method to initialize messaging module
-(void)initializeMessagingWithLaunchOptions:(NSDictionary *)launchOptions;

#pragma mark - Push Notifications

/**
 Method to register your app for push notification with APNS for iOS10 and above.
 @param categories to set categories for supporting Notification Actions (iOS10 and above)
 @param delegate to set the delegate for UNUserNotificationCenter.
 @version 4.0.0 and above
 */
-(void)registerForRemoteNotificationWithCategories:(NSSet<UNNotificationCategory*>* _Nullable)categories withUserNotificationCenterDelegate:(id _Nullable )delegate API_AVAILABLE(ios(10.0));

/**
 Method to register your app for push notification with APNS for iOS versions below iOS10.
 @param categoriesForPreviousOS to set categories for supporting Notification Actions in iOS8 and iOS9 (This should be a set of MONotificationCategory objects)
 @version 4.0.0 and above
 */
-(void)registerForRemoteNotificationForBelowiOS10WithCategories:(NSSet<MONotificationCategory*>*_Nullable)categoriesForPreviousOS API_DEPRECATED("This method is for iOS version below iOS 10.0", ios(8.0, 9.3.5));

/**
 * Method to send notification categories to SDK to support Notification Action in iOS10 and above
 */
-(void)setUserNotificationCategories:(NSSet<UNNotificationCategory*>*_Nullable)categories API_AVAILABLE(ios(10.0));


/**
 * Method to send notification categories to SDK to support Notification Action in iOS8 and iOS9
 */
-(void)setNotificationCategoriesForEarlieriOSVersionsWithCategories:(NSSet<MONotificationCategory*>*_Nullable)categories API_DEPRECATED("This method is for iOS version below iOS 10.0", ios(8.0, 9.3.5));


/**
 Use this method to pass the device token/push token generated by APNS for your app to MoEngage SDK which can be later used for sending push notification to your app users.
 
 Call this method in AppDelegate in application:didRegisterForRemoteNotificationsWithDeviceToken:.
 @param deviceToken The token of the device for push notifications
 */
-(void)setPushToken:(NSData *_Nullable)deviceToken;


/**
 Call this method in AppDelegate in didReceiveRemoteNotification
 @param application The application instance
 @param userInfo The info dict with the push
 */
-(void)didReceieveNotificationinApplication:(UIApplication*_Nullable)application withInfo:(NSDictionary* _Nonnull)userInfo;

/**
 Call this method in AppDelegate in didRegisterUserNotificationSettings to register the app for notification setting changes by the user
 @param settings The push notification settings.
 @since iOS8
 */
-(void)didRegisterForUserNotificationSettings:(UIUserNotificationSettings *_Nullable)settings;

/**
 Call this method in AppDelegate in didFailToRegisterForRemoteNotificationsWithError
 */
-(void)didFailToRegisterForPush;

/**
 Call this method in AppDelegate in userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
 @since iOS 10
 @version 3.0.0 and above
 */
-(void)userNotificationCenter:(UNUserNotificationCenter *_Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse *_Nonnull)response API_AVAILABLE(ios(10.0));

/**
 Use this method to track which action button was clicked by user for a notification.
 
 Call this method in AppDelegate in application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
 
 @param identifier Action Identifier of the Action button clicked by user
 @param notification NSDictionary instance of the notification payload received by the app.
 */
-(void)handleActionWithIdentifier:(NSString *_Nonnull)identifier forRemoteNotification:(NSDictionary *_Nonnull)notification;


/// Method to manually sync the Real-Time Trigger campaigns.
/// @param completionBlock Completion Block called after the Real-Time trigger sync is complete
-(void)syncRealTimeTriggersWithCompletionBlock:(nullable void(^)(BOOL rtSyncCompleted)) completionBlock;


/// Method to Opt-Out/Opt-In of Push Notifications for GDPR compliance
/// @param isPushOptedOut Status indicating the status of the Push Notifications
-(void)optOutOfMoEngagePushNotification:(BOOL)isPushOptedOut;

@end


NS_ASSUME_NONNULL_END
